services:
  frontend:
    build:
      context: .
      dockerfile: ./frontend/Dockerfile
    ports:
      - '3000:3000'
    env_file:
      - ./frontend/.env
    profiles:
      - production

  frontend-dev:
    build:
      context: .
      dockerfile: ./frontend/Dockerfile
      target: development
    env_file:
      - ./frontend/.env
    ports:
      - '3000:3000'
    volumes:
      # 소스코드 핫 리로드를 위한 볼륨 마운트
      - ./frontend:/usr/src/app
      - /usr/src/app/node_modules
    profiles:
      - development

  backend-dev:
    build:
      context: .
      dockerfile: ./backend/Dockerfile
      target: development
    command: pnpm run start:dev
    depends_on:
      backend_database:
        condition: service_healthy
    ports:
      - '3001:3001'
    env_file:
      - ./backend/.env
    volumes:
      # 개발 중인 소스 코드만 마운트
      - ./backend/src:/usr/src/app/src
      - /usr/src/app/node_modules
    profiles:
      - development

  backend_database:
    image: postgres:16
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    ports:
      - '6000:5432'
    volumes:
      - ./backend/postgres/:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 10s
      retries: 5
      start_period: 5s